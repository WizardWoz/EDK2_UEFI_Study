#
# DO NOT EDIT
# This file is auto-generated by build utility
#
# Module Name:
#
#   Makefile
#
# Abstract:
#
#   Auto-generated makefile for building modules, libraries or platform
#
    

#
# Platform Macro Definition
#
PLATFORM_NAME = AppPkg
PLATFORM_GUID = 0458dade-8b6e-4e45-b773-1b27cbda3e06
PLATFORM_VERSION = 0.01
PLATFORM_RELATIVE_DIR = edk2-libc\AppPkg
PLATFORM_DIR = f:\uefiworkspace\edk2-libc\AppPkg
PLATFORM_OUTPUT_DIR = Build\AppPkg

#
# Module Macro Definition
#
MODULE_NAME = BsdSocketLib
MODULE_GUID = E7A79769-DD6E-48f7-B90B-D4C510AC1741
MODULE_NAME_GUID = BsdSocketLib
MODULE_VERSION = 1.0
MODULE_TYPE = BASE
MODULE_FILE = BsdSocketLib.inf
MODULE_FILE_BASE_NAME = BsdSocketLib
BASE_NAME = $(MODULE_NAME)
MODULE_RELATIVE_DIR = StdLib\BsdSocketLib
PACKAGE_RELATIVE_DIR = BsdSocketLib
MODULE_DIR = f:\uefiworkspace\edk2-libc\StdLib\BsdSocketLib
FFS_OUTPUT_DIR = 

MODULE_ENTRY_POINT = _ModuleEntryPoint
ARCH_ENTRY_POINT = _ModuleEntryPoint
IMAGE_ENTRY_POINT = _ModuleEntryPoint

INF_VERSION = 0x00010005
BASE_NAME = BsdSocketLib
FILE_GUID = E7A79769-DD6E-48f7-B90B-D4C510AC1741
MODULE_TYPE = BASE
VERSION_STRING = 1.0

#
# Build Configuration Macro Definition
#
ARCH = IA32
TOOLCHAIN = VS2019
TOOLCHAIN_TAG = VS2019
TARGET = DEBUG

#
# Build Directory Macro Definition
#
# PLATFORM_BUILD_DIR = f:\uefiworkspace\Build\AppPkg\DEBUG_VS2019
BUILD_DIR = f:\uefiworkspace\Build\AppPkg\DEBUG_VS2019
BIN_DIR = $(BUILD_DIR)\IA32
LIB_DIR = $(BIN_DIR)
MODULE_BUILD_DIR = f:\uefiworkspace\Build\AppPkg\DEBUG_VS2019\IA32\StdLib\BsdSocketLib\BsdSocketLib
OUTPUT_DIR = f:\uefiworkspace\Build\AppPkg\DEBUG_VS2019\IA32\StdLib\BsdSocketLib\BsdSocketLib\OUTPUT
DEBUG_DIR = f:\uefiworkspace\Build\AppPkg\DEBUG_VS2019\IA32\StdLib\BsdSocketLib\BsdSocketLib\DEBUG
DEST_DIR_OUTPUT = $(OUTPUT_DIR)
DEST_DIR_DEBUG = $(DEBUG_DIR)

#
# Shell Command Macro
#
CP = copy /y
MV = move /y
RM = del /f /q
MD = mkdir
RD = rmdir /s /q


#
# Tools definitions specific to this module
#
APP_FLAGS = /nologo /E /TC
APP = E:\Visual Studio\IDE\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x86\cl.exe

ASL_FLAGS = 
ASL_OUTFLAGS =  -p
ASL = D:\ASLiasl.exe

ASLCC_FLAGS = /nologo /c /FIAutoGen.h /TC /Dmain=ReferenceAcpiTable
ASLCC = E:\Visual Studio\IDE\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x86\cl.exe

ASLDLINK_FLAGS = /NODEFAULTLIB /ENTRY:ReferenceAcpiTable /SUBSYSTEM:CONSOLE
ASLDLINK = E:\Visual Studio\IDE\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x86\link.exe

ASLPP_FLAGS = /nologo /E /C /FIAutoGen.h
ASLPP = E:\Visual Studio\IDE\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x86\cl.exe

ASM_FLAGS = /nologo /c /WX /W3 /Cx /coff /Zd /Zi
ASM = E:\Visual Studio\IDE\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x86\ml.exe

ASM16 = E:\Visual Studio\IDE\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x86\ml.exe

ASMLINK_FLAGS = /nologo /tiny
ASMLINK = C:\WINDDK\3790.1830\bin\bin16\link16.exe

BROTLI_GUID =  3D532050-5CDA-4FD0-879E-0F7F630D5AFB
BROTLI = BrotliCompress

CC_FLAGS = /nologo /arch:IA32 /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Z7 /Gw /wd4706 /X /Zc:wchar_t /D UEFI_C_SOURCE /Wv:11
CC = E:\Visual Studio\IDE\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x86\cl.exe

CRC32_GUID =  FC1BCDB0-7D31-49AA-936A-A4600D9DD083
CRC32 = GenCrc32

DEPS_FLAGS = /showIncludes

DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
DLINK = E:\Visual Studio\IDE\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x86\link.exe

DLINK2_FLAGS = /WHOLEARCHIVE

DTC_FLAGS = -H epapr
DTC = dtc

DTCPP = cpp

GENFW_FLAGS = 
GENFW = GenFw

LZMA_GUID =  EE4E5898-3914-4259-9D6E-DC7BD79403CF
LZMA = LzmaCompress

LZMAF86_GUID =  D42AE6BD-1352-4bfb-909A-CA72A6EAE889
LZMAF86 = LzmaF86Compress

MAKE = E:\Visual Studio\IDE\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x86\nmake.exe

NASM_FLAGS = -Ox -f win32 -g
NASM = D:\NASM\nasm

NASMB_FLAGS = -f bin

OBJCOPY_ADDDEBUGFLAG =  --add-gnu-debuglink="$(DEBUG_DIR)/$(MODULE_NAME).debug"
OBJCOPY_FLAGS = objcopy not needed for
OBJCOPY = echo
OBJCOPY_STRIPFLAG =  --strip-unneeded -R .eh_frame

OPTROM_FLAGS = -e
OPTROM = EfiRom

PKCS7SIGN_GUID =  4AAFD29D-68DF-49EE-8AA9-347D375665A7
PKCS7SIGN = Pkcs7Sign

PP_FLAGS = /nologo /E /TC /FIAutoGen.h
PP = E:\Visual Studio\IDE\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x86\cl.exe

RC = E:\Windows Kits\10\bin\10.0.17763.0\x86\rc.exe

RSA2048SHA256SIGN_GUID =  A7717414-C616-4977-9420-844712A735BF
RSA2048SHA256SIGN = Rsa2048Sha256Sign

SLINK_FLAGS = /NOLOGO /LTCG
SLINK = E:\Visual Studio\IDE\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x86\lib.exe

SYMRENAME_FLAGS = Symbol renaming not needed for
SYMRENAME = echo

TIANO_GUID =  A31280AD-481E-41B6-95E8-127F4C984779
TIANO = TianoCompress

VFR_FLAGS = -l -n
VFR = VfrCompile

VFRPP_FLAGS = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
VFRPP = E:\Visual Studio\IDE\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x86\cl.exe

VPDTOOL_GUID =  8C3D856A-9BE6-468E-850A-24F7A8D38E08
VPDTOOL = BPDG

cc_resp_64 = @f:\uefiworkspace\Build\AppPkg\DEBUG_VS2019\IA32\StdLib\BsdSocketLib\BsdSocketLib\OUTPUT\cc_resp_64.txt

MAKE_FILE = $(MODULE_BUILD_DIR)\Makefile

#
# Build Macro
#
OBJECT_FILES =  \
    $(OUTPUT_DIR)\Ip6Addr_Any.obj \
    $(OUTPUT_DIR)\Ip6Addr_LinkLocal_AllNodes.obj \
    $(OUTPUT_DIR)\Ip6Addr_LinkLocal_AllRouters.obj \
    $(OUTPUT_DIR)\Ip6Addr_Loopback.obj \
    $(OUTPUT_DIR)\Ip6Addr_NodeLocal_AllNodes.obj \
    $(OUTPUT_DIR)\accept.obj \
    $(OUTPUT_DIR)\base64.obj \
    $(OUTPUT_DIR)\bind.obj \
    $(OUTPUT_DIR)\close.obj \
    $(OUTPUT_DIR)\connect.obj \
    $(OUTPUT_DIR)\getaddrinfo.obj \
    $(OUTPUT_DIR)\gethostbydns.obj \
    $(OUTPUT_DIR)\gethostbyht.obj \
    $(OUTPUT_DIR)\gethostbynis.obj \
    $(OUTPUT_DIR)\gethostnamadr.obj \
    $(OUTPUT_DIR)\gethostname.obj \
    $(OUTPUT_DIR)\getnameinfo.obj \
    $(OUTPUT_DIR)\getnetbydns.obj \
    $(OUTPUT_DIR)\getnetbyht.obj \
    $(OUTPUT_DIR)\getnetbynis.obj \
    $(OUTPUT_DIR)\getnetnamadr.obj \
    $(OUTPUT_DIR)\getpeername.obj \
    $(OUTPUT_DIR)\getproto.obj \
    $(OUTPUT_DIR)\getprotoent.obj \
    $(OUTPUT_DIR)\getprotoname.obj \
    $(OUTPUT_DIR)\getservbyname.obj \
    $(OUTPUT_DIR)\getservbyport.obj \
    $(OUTPUT_DIR)\getservent.obj \
    $(OUTPUT_DIR)\getsockname.obj \
    $(OUTPUT_DIR)\getsockopt.obj \
    $(OUTPUT_DIR)\herror.obj \
    $(OUTPUT_DIR)\inet_net_ntop.obj \
    $(OUTPUT_DIR)\inet_net_pton.obj \
    $(OUTPUT_DIR)\inet_neta.obj \
    $(OUTPUT_DIR)\inet_pton.obj \
    $(OUTPUT_DIR)\listen.obj \
    $(OUTPUT_DIR)\map_v4v6.obj \
    $(OUTPUT_DIR)\ns_addr.obj \
    $(OUTPUT_DIR)\ns_name.obj \
    $(OUTPUT_DIR)\ns_netint.obj \
    $(OUTPUT_DIR)\ns_ntoa.obj \
    $(OUTPUT_DIR)\ns_parse.obj \
    $(OUTPUT_DIR)\ns_print.obj \
    $(OUTPUT_DIR)\ns_ttl.obj \
    $(OUTPUT_DIR)\nsap_addr.obj \
    $(OUTPUT_DIR)\poll.obj \
    $(OUTPUT_DIR)\read.obj \
    $(OUTPUT_DIR)\recv.obj \
    $(OUTPUT_DIR)\recvfrom.obj \
    $(OUTPUT_DIR)\res_comp.obj \
    $(OUTPUT_DIR)\res_data.obj \
    $(OUTPUT_DIR)\res_debug.obj \
    $(OUTPUT_DIR)\res_init.obj \
    $(OUTPUT_DIR)\res_mkquery.obj \
    $(OUTPUT_DIR)\res_mkupdate.obj \
    $(OUTPUT_DIR)\res_query.obj \
    $(OUTPUT_DIR)\res_send.obj \
    $(OUTPUT_DIR)\res_update.obj \
    $(OUTPUT_DIR)\send.obj \
    $(OUTPUT_DIR)\sendto.obj \
    $(OUTPUT_DIR)\sethostname.obj \
    $(OUTPUT_DIR)\setsockopt.obj \
    $(OUTPUT_DIR)\shutdown.obj \
    $(OUTPUT_DIR)\socket.obj \
    $(OUTPUT_DIR)\write.obj

INC =  \
    /I$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib \
    /I$(DEBUG_DIR) \
    /I$(WORKSPACE)\edk2-libc\StdLib \
    /I$(WORKSPACE)\edk2-libc\StdLib\Include \
    /I$(WORKSPACE)\edk2-libc\StdLib\Include\Ia32 \
    /I$(WORKSPACE)\edk2-libc\StdLibPrivateInternalFiles \
    /I$(WORKSPACE)\edk2-libc\StdLibPrivateInternalFiles\Include \
    /I$(WORKSPACE)\edk2-libc\StdLibPrivateInternalFiles\Include\Ia32 \
    /I$(WORKSPACE)\edk2\MdePkg \
    /I$(WORKSPACE)\edk2\MdePkg\Include \
    /I$(WORKSPACE)\edk2\MdePkg\Test\UnitTest\Include \
    /I$(WORKSPACE)\edk2\MdePkg\Test\Mock\Include \
    /I$(WORKSPACE)\edk2\MdePkg\Library\MipiSysTLib\mipisyst\library\include \
    /I$(WORKSPACE)\edk2\MdePkg\Include\Ia32 \
    /I$(WORKSPACE)\edk2\MdeModulePkg \
    /I$(WORKSPACE)\edk2\MdeModulePkg\Test\Mock\Include \
    /I$(WORKSPACE)\edk2\MdeModulePkg\Include

OBJECT_FILES_LIST = f:\uefiworkspace\Build\AppPkg\DEBUG_VS2019\IA32\StdLib\BsdSocketLib\BsdSocketLib\OUTPUT\object_files.lst
OBJLIST_0 = $(OUTPUT_DIR)\getproto.obj $(OUTPUT_DIR)\bind.obj $(OUTPUT_DIR)\socket.obj $(OUTPUT_DIR)\setsockopt.obj $(OUTPUT_DIR)\write.obj $(OUTPUT_DIR)\getnameinfo.obj $(OUTPUT_DIR)\close.obj $(OUTPUT_DIR)\map_v4v6.obj $(OUTPUT_DIR)\ns_ttl.obj $(OUTPUT_DIR)\getprotoent.obj $(OUTPUT_DIR)\gethostbynis.obj $(OUTPUT_DIR)\res_data.obj $(OUTPUT_DIR)\getsockname.obj $(OUTPUT_DIR)\res_init.obj $(OUTPUT_DIR)\sethostname.obj $(OUTPUT_DIR)\send.obj $(OUTPUT_DIR)\Ip6Addr_LinkLocal_AllRouters.obj $(OUTPUT_DIR)\inet_pton.obj $(OUTPUT_DIR)\inet_net_pton.obj $(OUTPUT_DIR)\recvfrom.obj $(OUTPUT_DIR)\getservent.obj $(OUTPUT_DIR)\getprotoname.obj $(OUTPUT_DIR)\accept.obj $(OUTPUT_DIR)\getnetnamadr.obj $(OUTPUT_DIR)\res_update.obj $(OUTPUT_DIR)\ns_netint.obj $(OUTPUT_DIR)\gethostbydns.obj $(OUTPUT_DIR)\getnetbydns.obj $(OUTPUT_DIR)\Ip6Addr_Any.obj $(OUTPUT_DIR)\getsockopt.obj $(OUTPUT_DIR)\read.obj $(OUTPUT_DIR)\gethostnamadr.obj $(OUTPUT_DIR)\Ip6Addr_Loopback.obj $(OUTPUT_DIR)\listen.obj $(OUTPUT_DIR)\poll.obj $(OUTPUT_DIR)\ns_addr.obj $(OUTPUT_DIR)\res_send.obj $(OUTPUT_DIR)\base64.obj $(OUTPUT_DIR)\getservbyname.obj $(OUTPUT_DIR)\getpeername.obj $(OUTPUT_DIR)\res_query.obj $(OUTPUT_DIR)\Ip6Addr_LinkLocal_AllNodes.obj $(OUTPUT_DIR)\inet_neta.obj $(OUTPUT_DIR)\connect.obj $(OUTPUT_DIR)\gethostname.obj $(OUTPUT_DIR)\ns_ntoa.obj $(OUTPUT_DIR)\res_comp.obj $(OUTPUT_DIR)\ns_parse.obj $(OUTPUT_DIR)\nsap_addr.obj $(OUTPUT_DIR)\res_debug.obj $(OUTPUT_DIR)\getservbyport.obj $(OUTPUT_DIR)\sendto.obj $(OUTPUT_DIR)\ns_name.obj $(OUTPUT_DIR)\getaddrinfo.obj $(OUTPUT_DIR)\getnetbyht.obj $(OUTPUT_DIR)\res_mkquery.obj $(OUTPUT_DIR)\gethostbyht.obj $(OUTPUT_DIR)\inet_net_ntop.obj $(OUTPUT_DIR)\shutdown.obj $(OUTPUT_DIR)\getnetbynis.obj $(OUTPUT_DIR)\recv.obj $(OUTPUT_DIR)\herror.obj $(OUTPUT_DIR)\ns_print.obj $(OUTPUT_DIR)\Ip6Addr_NodeLocal_AllNodes.obj $(OUTPUT_DIR)\res_mkupdate.obj


#
# Overridable Target Macro Definitions
#
FORCE_REBUILD = force_build
INIT_TARGET = init
PCH_TARGET =
BC_TARGET = 
CODA_TARGET = f:\uefiworkspace\Build\AppPkg\DEBUG_VS2019\IA32\StdLib\BsdSocketLib\BsdSocketLib\OUTPUT\BsdSocketLib.lib \
              

#
# Default target, which will build dependent libraries in addition to source files
#

all: mbuild


#
# Target used when called from platform makefile, which will bypass the build of dependent libraries
#

pbuild: $(INIT_TARGET) $(BC_TARGET) $(PCH_TARGET) $(CODA_TARGET)

#
# ModuleTarget
#

mbuild: $(INIT_TARGET) $(BC_TARGET) gen_libs $(PCH_TARGET) $(CODA_TARGET)

#
# Build Target used in multi-thread build mode, which will bypass the init and gen_libs targets
#

tbuild: $(BC_TARGET) $(PCH_TARGET) $(CODA_TARGET)

#
# Phony target which is used to force executing commands for a target
#
force_build:
	-@

#
# Target to update the FD
#

fds: mbuild gen_fds

#
# Initialization target: print build information and create necessary directories
#
init: info dirs

info:
	-@echo Building ... $(MODULE_DIR)\$(MODULE_FILE) [$(ARCH)]

dirs:
	-@if not exist $(DEBUG_DIR) $(MD) $(DEBUG_DIR)
	-@if not exist $(OUTPUT_DIR) $(MD) $(OUTPUT_DIR)


strdefs:
	-@$(CP) $(DEBUG_DIR)\AutoGen.h $(DEBUG_DIR)\$(MODULE_NAME)StrDefs.h

#
# GenLibsTarget
#
gen_libs:
	@cd $(MODULE_BUILD_DIR)

#
# Build Flash Device Image
#
gen_fds:
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BUILD_DIR)\Makefile fds
	@cd $(MODULE_BUILD_DIR)

!INCLUDE $(MODULE_BUILD_DIR)\dependency
!INCLUDE $(MODULE_BUILD_DIR)\deps_target

#
# Individual Object Build Targets
#
$(OBJLIST_0):  \
	$(MAKE_FILE) \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\getsockopt.c \
	$(DEBUG_DIR)\AutoGen.h \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\gethostname.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\map_v4v6.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\ns_parse.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\connect.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\res_mkquery.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\read.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\getpeername.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\getprotoent.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\ns_name.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\ns_ntoa.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\send.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\getnetbyht.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\ns_addr.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\gethostbyht.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\ns_netint.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\inet_net_ntop.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\res_send.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\inet_pton.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\Ip6Addr_LinkLocal_AllNodes.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\res_update.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\inet_neta.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\Ip6Addr_NodeLocal_AllNodes.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\ns_print.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\sethostname.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\setsockopt.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\getnetnamadr.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\gethostbynis.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\sendto.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\recvfrom.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\socket.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\write.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\res_query.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\getprotoname.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\res_comp.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\Ip6Addr_Any.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\ns_ttl.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\base64.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\getproto.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\accept.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\bind.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\res_debug.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\poll.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\shutdown.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\nsap_addr.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\close.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\getservbyport.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\Ip6Addr_LinkLocal_AllRouters.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\getaddrinfo.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\getnetbynis.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\listen.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\res_data.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\gethostbydns.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\res_mkupdate.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\gethostnamadr.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\getsockname.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\Ip6Addr_Loopback.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\getnameinfo.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\getservbyname.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\res_init.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\getservent.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\inet_net_pton.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\recv.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\getnetbydns.c \
	$(WORKSPACE)\edk2-libc\StdLib\BsdSocketLib\herror.c
	"$(CC)" /Fof:\uefiworkspace\Build\AppPkg\DEBUG_VS2019\IA32\StdLib\BsdSocketLib\BsdSocketLib\OUTPUT\.\ $(DEPS_FLAGS) $(CC_FLAGS) $(INC) $(cc_resp_64)

$(OUTPUT_DIR)\BsdSocketLib.lib : $(OBJECT_FILES)
$(OUTPUT_DIR)\BsdSocketLib.lib : $(OBJECT_FILES_LIST)
	"$(SLINK)" $(SLINK_FLAGS) /OUT:f:\uefiworkspace\Build\AppPkg\DEBUG_VS2019\IA32\StdLib\BsdSocketLib\BsdSocketLib\OUTPUT\BsdSocketLib.lib @$(OBJECT_FILES_LIST)



#
# clean all intermediate files
#
clean:
	if exist $(OUTPUT_DIR) $(RD) $(OUTPUT_DIR)
		$(RM) AutoGenTimeStamp

#
# clean all generated files
#
cleanall:
	if exist $(DEBUG_DIR) $(RD) $(DEBUG_DIR)
	if exist $(OUTPUT_DIR) $(RD) $(OUTPUT_DIR)
	$(RM) *.pdb *.idb > NUL 2>&1
	$(RM) $(BIN_DIR)\$(MODULE_NAME).efi
	$(RM) AutoGenTimeStamp

#
# clean all dependent libraries built
#
cleanlib:
	@cd $(MODULE_BUILD_DIR)

